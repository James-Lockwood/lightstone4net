<?xml version="1.0"?>
<project name="SharedBuildInclude" description="Include file for any NAnt gateway build file">
	<!-- global project settings -->

	<property name="bin.dir" value="${basedir}/bin" />
	<!--<property name="bin.3rdParty.dir" value="${bin.dir}/3rdParty" />-->
	<property name="build.dir" value="${basedir}/BuildOutput" />
	<property name="build.dir.bin" value="${build.dir}/bin" />
	<property name="build.dir.neutral" value="${build.dir.bin}/neutral" /> <!-- this is where the binaries are originally built into -->

	<sysinfo />
	<property name="msbuildbinpath" value="${sys.env.SystemRoot}/Microsoft.NET/Framework/v2.0.50727" />

	<!-- default configuration -->
	<if test="${not property::exists('configured')}">
		<!-- we are the master -->
		<property name="project.config" value="debug" /> <!-- debug|release -->
		<property name="target" value="build" /> <!-- the target to be used in slave builds -->
		<version-xml path="${basedir}/version.xml" incrementBuildNr="false"/>
		<property name="configured" value="true" />
	</if>

	<!-- named project configurations -->
	<target name="debug" description="Perform a 'debug' build">
		<property name="project.config" value="debug" />
		<property name="build.debug" value="true" />
	</target>
    
	<target name="release" description="Perform a 'release' build">
		<property name="project.config" value="release" />
		<property name="build.debug" value="false" />
	</target>

	<target name="init" description="Initializes build properties">
		<call target="${project.config}" />
		<property name="build.dir.config" value="${build.dir}/${project.config}" />
		<!-- Initialize version number properties -->
		<if test="${target::exists('init_internal')}">
			<call target="init_internal" />
		</if>
	</target>

	<target name="cleanBuildDirs" description="internally called">
		<echo message="Deleting content of build directories '${build.dir}' ..."/>
		<delete failonerror="true">
			<fileset>
				<include name="${build.dir}/**"/>
			</fileset>
		</delete>
	</target>

	<target name="cleanAll" description="Deletes every build configuration">
		<echo message="Deleting all builds from all configurations" />
		<call target="debug"/>
		<call target="init"/>
		<call target="clean"/>
		
		<echo message="Performing release build" />
		<call target="release"/>
		<call target="init"/>
		<call target="clean"/>
	</target>

	<target name="removeUnversioned" description="Removes files and directories that are not source controlled." failonerror="true">
		<echo message="Removing unversioned content ..."/>
		<svnRemoveUnversioned path="${basedir}" />
	</target>

	<target name="stageCleanBuild" description="Reverts any modified versioned files, removes unversioned files, and then updates to the latest revision." failonerror="true">
		<svnRevert path="${basedir}" failonerror="true" />
        <svnRemoveUnversioned path="${basedir}" failonerror="true" />

        <echo message="Updating to head revision ..."/>
		<svnUpdate path="${basedir}" failonerror="true" />
		<property name="globalRevision" value="${svn.revision}" />
		<version-xml path="${basedir}/version.xml" incrementBuildNr="false"/>
	</target>

	<target name="buildAll" description="Builds all configurations">
		<echo message="Performing debug build" />
		<call target="debug"/>
		<call target="init"/>
		<call target="build"/>
		
		<echo message="Performing release build" />
		<call target="release"/>
		<call target="init"/>
		<call target="build"/>
	</target>
</project>
